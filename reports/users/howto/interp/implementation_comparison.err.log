Traceback (most recent call last):
  File "/home/runner/work/pymedphys/pymedphys/.venv/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/work/pymedphys/pymedphys/.venv/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/work/pymedphys/pymedphys/.venv/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/hostedtoolcache/Python/3.12.4/x64/lib/python3.12/asyncio/base_events.py", line 687, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/runner/work/pymedphys/pymedphys/.venv/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/runner/work/pymedphys/pymedphys/.venv/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/work/pymedphys/pymedphys/.venv/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
%%timeit

interp.multilinear_interp(
    (x, y, z), values, axes_interp=(xi, yi, zi), algo="econforge"
).reshape((xi.size, yi.size, zi.size))
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
File [0;32m~/work/pymedphys/pymedphys/lib/pymedphys/_vendor/apipkg/__init__.py:237[0m, in [0;36mAliasModule.<locals>.AliasModule.__getattribute__[0;34m(self, name)[0m
[1;32m    236[0m [38;5;28;01mtry[39;00m:
[0;32m--> 237[0m     [38;5;28;01mreturn[39;00m [38;5;28mgetattr[39m([43mgetmod[49m[43m([49m[43m)[49m, name)
[1;32m    238[0m [38;5;28;01mexcept[39;00m ([38;5;167;01mImportError[39;00m, [38;5;167;01mModuleNotFoundError[39;00m) [38;5;28;01mas[39;00m exc:
[1;32m    239[0m     [38;5;66;03m# Support inspection rejection[39;00m

File [0;32m~/work/pymedphys/pymedphys/lib/pymedphys/_vendor/apipkg/__init__.py:216[0m, in [0;36mAliasModule.<locals>.getmod[0;34m()[0m
[1;32m    215[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m mod:
[0;32m--> 216[0m     x [38;5;241m=[39m [43mimportobj[49m[43m([49m[43mmodpath[49m[43m,[49m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m)[49m
[1;32m    217[0m     [38;5;28;01mif[39;00m attrname [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m~/work/pymedphys/pymedphys/lib/pymedphys/_vendor/apipkg/__init__.py:103[0m, in [0;36mimportobj[0;34m(modpath, attrname)[0m
[1;32m    102[0m [38;5;250m[39m[38;5;124;03m"""imports a module, then resolves the attrname on it"""[39;00m
[0;32m--> 103[0m module [38;5;241m=[39m [38;5;28;43m__import__[39;49m[43m([49m[43mmodpath[49m[43m,[49m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m,[49m[43m [49m[38;5;28;43;01mNone[39;49;00m[43m,[49m[43m [49m[43m[[49m[38;5;124;43m"[39;49m[38;5;124;43m__doc__[39;49m[38;5;124;43m"[39;49m[43m][49m[43m)[49m
[1;32m    104[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m attrname:

[0;31mModuleNotFoundError[0m: No module named 'interpolation'

The above exception was the direct cause of the following exception:

[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[7], line 1[0m
[0;32m----> 1[0m [43mget_ipython[49m[43m([49m[43m)[49m[38;5;241;43m.[39;49m[43mrun_cell_magic[49m[43m([49m[38;5;124;43m'[39;49m[38;5;124;43mtimeit[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[38;5;124;43m'[39;49m[38;5;130;43;01m\n[39;49;00m[38;5;124;43minterp.multilinear_interp([39;49m[38;5;130;43;01m\n[39;49;00m[38;5;124;43m    (x, y, z), values, axes_interp=(xi, yi, zi), algo=[39;49m[38;5;124;43m"[39;49m[38;5;124;43meconforge[39;49m[38;5;124;43m"[39;49m[38;5;130;43;01m\n[39;49;00m[38;5;124;43m).reshape((xi.size, yi.size, zi.size))[39;49m[38;5;130;43;01m\n[39;49;00m[38;5;124;43m'[39;49m[43m)[49m

File [0;32m~/work/pymedphys/pymedphys/.venv/lib/python3.12/site-packages/IPython/core/interactiveshell.py:2541[0m, in [0;36mInteractiveShell.run_cell_magic[0;34m(self, magic_name, line, cell)[0m
[1;32m   2539[0m [38;5;28;01mwith[39;00m [38;5;28mself[39m[38;5;241m.[39mbuiltin_trap:
[1;32m   2540[0m     args [38;5;241m=[39m (magic_arg_s, cell)
[0;32m-> 2541[0m     result [38;5;241m=[39m [43mfn[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   2543[0m [38;5;66;03m# The code below prevents the output from being displayed[39;00m
[1;32m   2544[0m [38;5;66;03m# when using magics with decorator @output_can_be_silenced[39;00m
[1;32m   2545[0m [38;5;66;03m# when the last Python token in the expression is a ';'.[39;00m
[1;32m   2546[0m [38;5;28;01mif[39;00m [38;5;28mgetattr[39m(fn, magic[38;5;241m.[39mMAGIC_OUTPUT_CAN_BE_SILENCED, [38;5;28;01mFalse[39;00m):

File [0;32m~/work/pymedphys/pymedphys/.venv/lib/python3.12/site-packages/IPython/core/magics/execution.py:1185[0m, in [0;36mExecutionMagics.timeit[0;34m(self, line, cell, local_ns)[0m
[1;32m   1183[0m [38;5;28;01mfor[39;00m index [38;5;129;01min[39;00m [38;5;28mrange[39m([38;5;241m0[39m, [38;5;241m10[39m):
[1;32m   1184[0m     number [38;5;241m=[39m [38;5;241m10[39m [38;5;241m*[39m[38;5;241m*[39m index
[0;32m-> 1185[0m     time_number [38;5;241m=[39m [43mtimer[49m[38;5;241;43m.[39;49m[43mtimeit[49m[43m([49m[43mnumber[49m[43m)[49m
[1;32m   1186[0m     [38;5;28;01mif[39;00m time_number [38;5;241m>[39m[38;5;241m=[39m [38;5;241m0.2[39m:
[1;32m   1187[0m         [38;5;28;01mbreak[39;00m

File [0;32m~/work/pymedphys/pymedphys/.venv/lib/python3.12/site-packages/IPython/core/magics/execution.py:173[0m, in [0;36mTimer.timeit[0;34m(self, number)[0m
[1;32m    171[0m gc[38;5;241m.[39mdisable()
[1;32m    172[0m [38;5;28;01mtry[39;00m:
[0;32m--> 173[0m     timing [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43minner[49m[43m([49m[43mit[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mtimer[49m[43m)[49m
[1;32m    174[0m [38;5;28;01mfinally[39;00m:
[1;32m    175[0m     [38;5;28;01mif[39;00m gcold:

File [0;32m<magic-timeit>:1[0m, in [0;36minner[0;34m(_it, _timer)[0m

File [0;32m~/work/pymedphys/pymedphys/lib/pymedphys/_interp/interp.py:304[0m, in [0;36mmultilinear_interp[0;34m(axes_known, values, axes_interp, points_interp, algo, bounds_error, extrap_fill_value)[0m
[1;32m    301[0m         values_interp [38;5;241m=[39m interp3d_scipy(axes_known, values, points_interp)
[1;32m    303[0m     [38;5;28;01melif[39;00m algo[38;5;241m.[39mlower() [38;5;241m==[39m [38;5;124m"[39m[38;5;124meconforge[39m[38;5;124m"[39m:
[0;32m--> 304[0m         values_interp [38;5;241m=[39m [43minterp3d_econforge[49m[43m([49m[43maxes_known[49m[43m,[49m[43m [49m[43mvalues[49m[43m,[49m[43m [49m[43mpoints_interp[49m[43m)[49m
[1;32m    306[0m [38;5;28;01mreturn[39;00m values_interp

File [0;32m~/work/pymedphys/pymedphys/lib/pymedphys/_interp/interp.py:239[0m, in [0;36minterp3d_econforge[0;34m(axes_known, values, positions)[0m
[1;32m    236[0m [38;5;28;01mdef[39;00m [38;5;21minterp3d_econforge[39m(axes_known, values, positions):
[1;32m    237[0m     [38;5;28;01mfrom[39;00m [38;5;21;01mpymedphys[39;00m[38;5;21;01m.[39;00m[38;5;21;01m_imports[39;00m [38;5;28;01mimport[39;00m interpolation
[0;32m--> 239[0m     grid [38;5;241m=[39m [43minterpolation[49m[38;5;241;43m.[39;49m[43msplines[49m[38;5;241;43m.[39;49m[43mCGrid[49m([38;5;241m*[39maxes_known)
[1;32m    241[0m     [38;5;28;01mreturn[39;00m interpolation[38;5;241m.[39msplines[38;5;241m.[39meval_linear(grid, values, positions)

File [0;32m~/work/pymedphys/pymedphys/lib/pymedphys/_vendor/apipkg/__init__.py:262[0m, in [0;36mAliasModule.<locals>.AliasModule.__getattribute__[0;34m(self, name)[0m
[1;32m    259[0m         extra [38;5;241m=[39m sorted_extra
[1;32m    260[0m         [38;5;28;01mbreak[39;00m
[0;32m--> 262[0m [38;5;28;01mraise[39;00m [38;5;167;01mModuleNotFoundError[39;00m(
[1;32m    263[0m     [38;5;124mf[39m[38;5;124m"""[39m
[1;32m    264[0m [38;5;124m    PyMedPhys was unable to import [39m[38;5;124m"[39m[38;5;132;01m{[39;00mno_scope_modname[38;5;132;01m}[39;00m[38;5;124m.[39m[38;5;132;01m{[39;00mname[38;5;132;01m}[39;00m[38;5;124m"[39m[38;5;124m.[39m
[1;32m    265[0m [38;5;124m    The easiest way to fix this issue is to use the [39m[38;5;124m"[39m[38;5;124m[extra][39m[38;5;124m"[39m
[1;32m    266[0m [38;5;124m    option when installing PyMedPhys. Please run[39m
[1;32m    267[0m [38;5;124m    [39m[38;5;124m"[39m[38;5;124mpip install pymedphys[[39m[38;5;132;01m{[39;00mextra[38;5;132;01m}[39;00m[38;5;124m]==[39m[38;5;132;01m{[39;00m__version__[38;5;132;01m}[39;00m[38;5;124m"[39m[38;5;124m.[39m
[1;32m    268[0m [38;5;124m    [39m[38;5;124m"""[39m
[1;32m    269[0m ) [38;5;28;01mfrom[39;00m [38;5;21;01mexc[39;00m

[0;31mModuleNotFoundError[0m: 
                    PyMedPhys was unable to import "interpolation.splines.CGrid".
                    The easiest way to fix this issue is to use the "[extra]"
                    option when installing PyMedPhys. Please run
                    "pip install pymedphys[user]==0.41.0-dev0".
                    

